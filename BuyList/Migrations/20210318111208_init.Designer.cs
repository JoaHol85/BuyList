// <auto-generated />
using System;
using BuyList.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuyList.Migrations
{
    [DbContext(typeof(BuyListContext))]
    [Migration("20210318111208_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuyList.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProductListID")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductListID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("BuyList.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<bool>("Bought")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductListID")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductListID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BuyList.Models.ProductList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProductList");
                });

            modelBuilder.Entity("BuyList.Models.Member", b =>
                {
                    b.HasOne("BuyList.Models.ProductList", "ProductList")
                        .WithMany("ListMembers")
                        .HasForeignKey("ProductListID");

                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("BuyList.Models.Product", b =>
                {
                    b.HasOne("BuyList.Models.ProductList", "ProductList")
                        .WithMany("ListOfProducts")
                        .HasForeignKey("ProductListID");

                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("BuyList.Models.ProductList", b =>
                {
                    b.Navigation("ListMembers");

                    b.Navigation("ListOfProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
